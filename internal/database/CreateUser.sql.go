// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: CreateUser.sql

package database

import (
	"context"
	"database/sql"
	"time"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (created_at, updated_at, name, surname, patronymic, age, gender, nationality)
VALUES (
    $1,
    $2,
    $3,
    $4,
    $5,
    $6,
    $7,
    $8
)
RETURNING id, created_at, updated_at, name, surname, patronymic, age, gender, nationality
`

type CreateUserParams struct {
	CreatedAt   time.Time
	UpdatedAt   time.Time
	Name        string
	Surname     string
	Patronymic  sql.NullString
	Age         int32
	Gender      string
	Nationality string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.Name,
		arg.Surname,
		arg.Patronymic,
		arg.Age,
		arg.Gender,
		arg.Nationality,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Name,
		&i.Surname,
		&i.Patronymic,
		&i.Age,
		&i.Gender,
		&i.Nationality,
	)
	return i, err
}
